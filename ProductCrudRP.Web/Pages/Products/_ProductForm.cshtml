@model ProductFormViewModel


<form asp-page="@Model.Action" method="post">
    <div class="bg-@Model.Theme text-white text-center p-2 mb-2">@Model.Action.ToUpper()</div>

    <input asp-for="Product.Id" class="form-control" hidden/>

    <div class="form-group">
        <label asp-for="Product.Name"></label>
        <input asp-for="Product.Name" disabled="@Model.ReadOnly" class="form-control"/>
        <span asp-validation-for="Product.Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Product.Price"></label>
        <input asp-for="Product.Price" disabled="@Model.ReadOnly" class="form-control" />
        <span asp-validation-for="Product.Price" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Product.CategoryId" class="d-flex justify-content-between">
            <span>Category</span>
            @if (!Model.ReadOnly)
            {
                <input name="ReturnPage" hidden value="@Model.Action" />
                <button asp-page="CreateCategory" formmethod="get" formnovalidate class="btn btn-sm btn-outline-primary ml-2">Add New Category</button>
            }
        </label>
        <select asp-for="Product.CategoryId" disabled="@Model.ReadOnly" class="form-control"
                asp-items="@(new SelectList(Model.Categories, "Id","Name"))">
            <option value="" disabled selected></option>
        </select>
        <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
    </div>

    <div class="form-group">
        @if(!Model.ReadOnly || Model.Action == "Delete")
        {
            <button class="btn btn-@Model.Theme" type="submit">@Model.Action</button>
        }
        <a asp-page="/Index" class="btn btn-secondary">Back</a>
    </div>

</form>